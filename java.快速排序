package package1112;

import com.sun.org.apache.xpath.internal.SourceTree;

import java.util.Arrays;
import java.util.Stack;

public class SortDemo {
    // 快速排序
    public static void quickSort(int[] array) {
        quickSortHelper(array, 0, array.length - 1);
    }

    private static void  quickSortHelper(int[] array, int left, int right) {
        if (left >= right) {
            return;
        }
        int index = partition(array, left, right);
        quickSortHelper(array, left, index - 1);
        quickSortHelper(array, index + 1, right);
    }

    private static int partition(int[] array, int left, int right) {
        int baseIndex = right;
        int baseValue = array[baseIndex];
        while (left < right) {
            while (left < right && array[left] <= baseValue) {
                left++;
            }
            while (left < right && array[right] >= baseValue) {
                right--;
            }
            swap(array, left, right);
        }
        swap(array, left, baseIndex);
        return left;
    }
    private static void swap(int[] array, int x, int y) {
        int tmp = array[x];
        array[x] = array[y];
        array[y] = tmp;
    }
    public static void main(String[] args) {
        int[] arr = {9, 5, 2, 7, 3, 6, 8, 1};
//        insertSort(arr);
//        shellSort(arr);
//        selectSort(arr);
        heapSort(arr);
//        quickSort(arr);
//        quickSortByLoop(arr);
//        mergeSort(arr);
        System.out.println(Arrays.toString(arr));
    }
}
