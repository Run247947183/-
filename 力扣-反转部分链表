/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int m, int n) {
        int len = size(head);
        if (m > n || m < 1 || n > len) {
            return null;
        }
        ListNode newHead = new ListNode(20);
        newHead.next = head;
        ListNode cur = newHead;
        for (int i = 1; i < m; i++) {
            cur = cur.next;                
        }
        ListNode node = cur.next;
        for (int i = m; i < n; i++) {
            ListNode nex = node.next;
            node.next = nex.next;
            nex.next = cur.next;
            cur.next = nex;
        }
        return newHead.next;
    }
    public int size(ListNode head) {
        int size = 0;
        for (ListNode cur = head;
                cur != null; cur = cur.next) {
            size++;
        }
        return size;
    }
}
