#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
#if 0
//写一个函数可以判断一个数是不是素数。
//出来1和它自身，没有其它因数
int Judge_Is_Prime_Num(int num){
	if (num % 2 != 0){
		return 1;
	}
	else {
		return 0;
	}
}

int main(){
	int num = 0;
	printf("请输入一个数：\n");
	scanf("%d", &num);
	int ret=Judge_Is_Prime_Num(num);
	if (ret == 1){
		printf("您输入的数是素数！\n");
	}
	else {
		printf("您输入的数不是素数！\n");
	}
	system("pause");
	return 0;
}


//写一个函数判断一年是不是闰年。


int Judge_Is_Leap_Year(int year){
	if ((year % 4 == 0 && year / 100!=0)||(year % 400 ==0)){
		return 1;
	}
	else {
		return 0;
	}
}

int main(){
	int year = 0;
	printf("请输入判断的年份！\n");
	scanf("%d", &year);
	int ret = Judge_Is_Leap_Year(year);
	if (ret == 1){
		printf("这年是闰年！\n");
	}
	else {
		printf("这年不是闰年！\n");
	}
	system("pause");
	return 0;
}
//写一个函数，实现一个整形有序数组的二分查找

int Find(int arr[], int key,int left,int right){
	int mid = 0;
	while (left<=right){
		mid = (left + right) / 2;
		if (key > arr[mid]){
			left = mid+1;
		}
		else if (key < arr[mid]){
			right = mid-1;
		}
		else {
			return 1;
		}
	}return -1;
}

int main(){
	int arr[] = { 0, 1, 2, 3, 4, 5, 6, 7, 8, 9 };
	int left = 0;
	int right = sizeof(arr) / sizeof(arr[0])-1;
	int key = 0;
	printf("请输入您要查找的数字:\n");
	scanf("%d", &key);
	int ret=Find(arr, key,left,right);
	if (ret != -1){
		printf("找到了！\n");
	}
	else {
		printf("没找到！\n");
	}
	system("pause");
	return 0;
}

#endif
//写一个函数，每调用一次这个函数，就会将num的值增加1

int Increase(){

}

int main(){

	system("pause");
	return 0;
}
