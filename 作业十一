#define _CRT_SECURE_NO_WARNINGS
#include<stdio.h>
#include<stdlib.h>
//写一个函数返回参数二进制中 1 的个数
//比如： 15 0000 1111 4 个 1
//程序原型：
//int count_one_bits(unsigned int value)
//{
	// 返回 1的位数 
//}
#if 0
int count_one_bits(int num){
	int count = 0;
	for (int i = 0; i < 32; ++i){
		if ((num & (1 << i)) != 0){
			++count;
		}
	}
	return count;
}

int main(){
	int ret = count_one_bits(15);
	printf("ret=%d\n", ret);
	system("pause");
}


//获取一个数二进制序列中所有的偶数位和奇数位，
//分别输出二进制序列。



int main(){
	int i = 0;
	int num = 0;
	printf("请输入一个数\n");
	scanf("%d", &num);
	printf("奇数数列为:");
	for (i = 31; i >= 0; i -= 2){
		printf("%d", (num >> i) & 1);
	}
	printf("\n");
	printf("偶数数列为:");
	for (i = 30; i >= 0; i -= 2){
		printf("%d", (num >> i) & 1);
	}
	printf("\n");
	system("pause");
}


//输出一个整数的每一位

int main(){
	int num = 0;
	int i = 0;
	printf("请输入一个整数:");
	scanf("%d", &num);
	for (i = 0; i < 32; ++i){
		printf("%d ", (num<<i) & 1);
	}
	system("pause");
}
  

//编程实现：
//两个int（32位）整数m和n的二进制表达中，有多少个位(bit)不同？
//输入例子 :
//1999 2299:  0111 1100 1111   ‭1000 1111 1011‬
//输出例子 : 7

int main(){
	int m = 0;
	int n = 0;
	int i = 0;
	int count = 0;
	printf("请输入两个整数:");
	scanf("%d %d", &m, &n);
	for (i = 0; i < 32; ++i){
		if ((m & 1)!=(n & 1)){
			++count;
		}
		m=m >> 1;
		n=n >> 1;
	}
	printf("count=%d\n", count);
	system("pause");
}
#endif


