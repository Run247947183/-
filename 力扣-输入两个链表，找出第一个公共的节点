/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) {
 *         val = x;
 *         next = null;
 *     }
 * }
 */
public class Solution {
    public ListNode getIntersectionNode(ListNode headA, ListNode headB) {
        int len1 = size(headA);
        int len2 = size(headB);
        ListNode cur1 = headA;
        ListNode cur2 = headB;
        if (len1 > len2) {
            int len = len1 - len2;
            for (int i = 0; i < len; i++) {
                cur1 = cur1.next;
            }
        } else {
            int len = len2 - len1;
            for (int i = 0; i < len; i++) {
                cur2 = cur2.next;
            }
        }
        while (cur1 != null && cur2 != null) {
            if (cur1 == cur2) {
                return cur1;
            }
            cur1 = cur1.next;
            cur2 = cur2.next;
        }
        return null;
        
    }
    public int size(ListNode head) {
        int size = 0;
        for (ListNode cur = head;
                cur != null; cur = cur.next) {
            size++;
        }
        return size;
    }
}
